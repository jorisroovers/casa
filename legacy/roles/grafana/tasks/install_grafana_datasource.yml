# Thank you kind sir:
# https://github.com/grafana/grafana/issues/1789#issuecomment-272615451
# Check if datasource exists
- name: "Checking if datasource {{datasource_name}} is already installed"
  uri:
    url: "http://{{grafana_bind_ip}}:{{grafana_port}}/api/datasources/name/{{datasource_name}}"
    user: "{{grafana_admin_user}}"
    password: "{{grafana_admin_password}}"
    force_basic_auth: yes
  register: grafana_datasource
  failed_when: false
  changed_when: false

# Note below that we install our cert using jsonData.tlsAuthWithCACert and secureJsonData.tlsCACert
# However, we also set tlsSkipVerify because the cert verification always fail due to the hostname in the cert
# not matching the actual hostname (this makes it easy for dev etc). The reason to still install the cert
# is mostly for future reference in case we do ever end up wanted to validate it (it was a bit of a pain to figure out
# the correct API fields).
- name: Enable Datasource {{datasource_name}}
  uri:
    url: http://{{grafana_bind_ip}}:{{grafana_port}}/api/datasources
    method: POST
    user: "{{grafana_admin_user}}"
    password: "{{grafana_admin_password}}"
    body:
      name: "{{datasource_name}}"
      type: "{{datasource_type}}" # influxdb
      url:  "{{datasource_url}}" # "https://{{influxdb_bind_ip}}:{{influxdb_port}}"
      access: "proxy"
      isDefault: true
      user: "{{datasource_user}}"
      password: "{{datasource_password}}"
      database: "{{datasource_database}}"
      jsonData:
        tlsSkipVerify: true
        tlsAuthWithCACert: true
      secureJsonData:
        tlsCACert: "{{datasource_tlsCACert}}"
    force_basic_auth: yes
    status_code: 200
    body_format: json
  when: grafana_datasource.status == 404
