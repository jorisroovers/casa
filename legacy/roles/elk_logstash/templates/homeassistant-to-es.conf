input {
    file {
        path => "{{homeassistant_logfile}}"
    }
}


# Example logline:
# 2018-07-07 16:26:52 INFO (MainThread) [homeassistant.core] Bus:Handling <Event state_changed[L]: entity_id=binary_sensor.sensu_google_com, old_state=<state binary_sensor.sensu_google_com=on; friendly_name=google.com, status=0, sensu_event_id=b0a32181-3af4-4c86-b208-931ad3600d3e, output=CheckPING OK: ICMP ping successful for host: google.com, source=sensu, timestamp=1530973599 @ 2018-07-07T12:19:03.208283+02:00>, new_state=<state binary_sensor.sensu_google_com=on; friendly_name=google.com, status=0, sensu_event_id=e0f714d5-65be-4efc-bbef-6f357b093f14, output=CheckPING OK: ICMP ping successful for host: google.com, source=sensu, timestamp=1530973606 @ 2018-07-07T12:19:03.208283+02:00>>
# '%{DATE:date} %{TIME:time} %{WORD:loglevel} \(%{WORD:thread}\) \[%{WORD:logger}\] Bus:Handling <Event state_changed[L]: %{GREEDYDATA:message}'
# Reference of different matching types: https://github.com/elastic/logstash/blob/v1.4.2/patterns/grok-patterns
# Call-outs:
#   WORD: single contiguous word, no dots or spaces allowed. Use DATA for that
filter {
    grok {
         match => {
             "message" => [
                '%{DATE:date} %{TIME:time} %{WORD:loglevel} \(%{WORD:thread}\) \[%{DATA:logger}\] Bus\:Handling \<Event state_changed\[L\]\: entity_id=%{DATA:entity_id}, %{GREEDYDATA:log_message}',
                '%{DATE:date} %{TIME:time} %{WORD:loglevel} \(%{WORD:thread}\) \[%{DATA:logger}\] %{GREEDYDATA:log_message}'
            ]}
    }
}
#                 '%{DATE:date} %{TIME:time} %{WORD:loglevel} \(%{WORD:thread}\) \[%{WORD:logger}\] %{GREEDYDATA:message}'

#          '%{DATE:Date} %{TIME:Time} %{SPACE}\[%{WORD:Job}\]%{SPACE}%{GREEDYDATA:Message}'

output {
    elasticsearch {
        hosts => ["{{elasticsearch_host}}:{{elasticsearch_api_port}}"]
    }
}