- platform: workday
  country: NL
  workdays: [mon, tue, wed, thu, fri]
  # After upgrading to homeassistant 0.103.x, device_tracker.mbpcisco started flapping, so switched to
  # binary_sensor.ping
- platform: ping
  host: "{{mbpcisco_host}}"
  name: mbpcisco_active
  scan_interval: 5
  # After upgrading to homeassistant 0.103.x, device_tracker.tv_livingroom started flapping, so switched to
  # binary_sensor.ping
- platform: ping
  host: "{{tv_livingroom_host}}"
  name: tv_livingroom_active
  scan_interval: 5
- platform: template
  sensors:
    joris_is_workday:
      friendly_name: "Joris is workday"
      {% raw %}
      value_template: "{{ is_state('binary_sensor.workday_sensor', 'on') and is_state('input_boolean.joris_pto', 'off') }}"
      {% endraw %}
  
      # Newline required here so ansible doesn't mess up the indentation after 'endraw'
    joris_at_computer:
      friendly_name: "Joris At Computer"
      {% raw %}
      value_template: "{{ (states('binary_sensor.mbpcisco_active') == 'on') }}"
      {% endraw %}
  
      # Newline required here so ansible doesn't mess up the indentation after 'endraw'
    joris_working:
      friendly_name: "Joris working"
      {% raw %}
      value_template: "{{ (states('binary_sensor.joris_at_computer') == 'on') and (is_state('binary_sensor.joris_is_workday', 'on')) }}"
      {% endraw %}

      # Newline required here so ansible doesn't mess up the indentation after 'endraw'
    washing_machine:
      friendly_name: "Washing Machine"
      {% raw %}
      value_template: "{{ states.switch.washing_machine.attributes.current_power_w | float > 2 }}"
      {% endraw %}
  
      # Newline required here so ansible doesn't mess up the indentation after 'endraw'
    dryer:
      friendly_name: "Dryer"
      {% raw %}
      value_template: "{{ states.switch.dryer.attributes.current_power_w | float > 2 }}"
      {% endraw %}
  
      # Newline required here so ansible doesn't mess up the indentation after 'endraw'
    housekeeping:
      # Housekeeping on Monday and Fridays
      friendly_name: "Housekeeping"
      entity_id: sensor.time
      value_template: >-
          {% raw %}{{ ((now().isoweekday() == 1) and (now().hour >= 12 and now().hour < 16))
              or ((now().isoweekday() == 5) and (now().hour >= 12 and now().hour < 14)) }}{% endraw %}
  
      # Newline required here so ansible doesn't mess up the indentation after 'endraw'
    is_evening:
      friendly_name: "Is Evening"
      entity_id: sensor.time
  
      # Evening: hour before next sunset OR if  next sunset > midnight (i.e. next sunset is taking place next day)
      value_template: >-
          {% raw %}{{ ( as_timestamp(states.sun.sun.attributes.next_setting) > as_timestamp(states.sun.sun.attributes.next_midnight) ) or
                  ( as_timestamp(now()) > (as_timestamp(states.sun.sun.attributes.next_setting) - (0.75*3600)) ) }}{% endraw %}
  
      # Newline required here so ansible doesn't mess up the indentation after 'endraw'