---
- name: Add authorized key for casa
  authorized_key: user={{ansible_ssh_user}} key="{{casa_public_key}}"

- name: Install custom sshd_config file
  template: src=sshd_config dest=/etc/ssh/sshd_config
  notify: restart_ssh
  become:  yes

- name: "Modifying sudoers file to extend sudoers timeout for user '{{ansible_ssh_user}}'"
  lineinfile:
    dest: /etc/sudoers
    state: present
    line: 'Defaults:{{ansible_ssh_user}} timestamp_timeout=30'
    validate: visudo -cf %s
  become: yes

- name: Determining NodeJS version
  shell: "node --version"
  register: node_version
  changed_when: False
  ignore_errors: yes

# See here: https://github.com/nodesource/distributions/blob/master/README.md
- name: Adding NodeJS 10 package source
  shell: "curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -"
  become: yes
  when: node_version is failed

- name: Only run "apt update_cache=yes" if we last did so more than 3600 seconds ago
  apt: update_cache=yes cache_valid_time=3600
  become: yes

- name: "Installing some convenience utilities (system)"
  apt: name={{item}} state=present
  become: yes
  with_items:
    - gcc
    - git
    - python-setuptools # Installs easy_install
    - python-virtualenv
    - vim
    - logrotate
    - net-tools # ifconfig
    - htop # better top :-)
    - sysstat # mpstat
    - tree
    - grc # generic colourizer https://github.com/garabik/grc
    - jq
    - libxml2-dev
    - libxslt1-dev
    - mosh
    - iotop
    - nodejs  # npm is included

- name: "Installing pip"
  shell: >
    curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py;
    python get-pip.py;
    python3 get-pip.py
  args:
    chdir: "/tmp"
  become: yes

- name: "Installing rg"
  shell: >
    curl -L {{rg_download_url}} -o ripgrep.tar.gz;
    tar xvf ripgrep.tar.gz;
    cp ripgrep*/rg /usr/bin/;
  args:
    chdir: "/tmp"
    creates: "/usr/bin/rg"
  become: yes

- name: "Installing bat"
  shell: >
    curl -L {{bat_download_url}} -o bat.deb;
    dpkg -i bat.deb;
  args:
    chdir: "/tmp"
    creates: "/usr/bin/bat"
  become: yes

- name: Installing fzf (1/2) - Cloning from git
  git: repo=https://github.com/junegunn/fzf dest="{{ansible_env.HOME}}/.fzf" version="0.18.0" force=yes

- name: Installing fzf (2/2) - Running installer script
  shell: >
    {{ansible_env.HOME}}/.fzf/install --completion --key-bindings --update-rc
  args:
    creates: "{{ansible_env.HOME}}/.fzf/bin/fzf"

- name: "Installing more utilities (python)"
  pip: name={{item}} state=present executable=pip3
  with_items:
    - httpie
  become: yes

- name: "Enabling line numbers in vim"
  lineinfile:
    dest: /etc/vim/vimrc
    line: "set number"
  become: yes

- name: Set Vim as default system editor
  alternatives:
    name: editor
    path: /usr/bin/vim.basic
  become: yes

# Needed in order to use a MBP as server
- name: "Making sure the server doesn't suspend on lid close"
  lineinfile:
    dest: /etc/systemd/logind.conf
    line: "HandleLidSwitch=ignore"
  notify: restart_logind
  become: yes

- name: Installing bash profile
  template: src=casa_profile.sh dest=/etc/profile.d/casa_profile.sh
  become: yes

- name: Creating tools directory
  file: dest={{tools_dir}} state=directory owner={{tools_user}} group={{tools_group}}
  become: yes

- name: Copying files to {{tools_dir}}
  copy:
    src: simple-server.py
    dest: "{{tools_dir}}/simple-server.py"

- name: Make /tmp world writable (generally useful when interacting with /tmp)
  file: path=/tmp mode=o+rw
  become: yes

- name: "Installing basic IP Tables rules"
  import_tasks: install_iptable_rules.yml
  become: yes
  tags:
    - iptables
    - iptable